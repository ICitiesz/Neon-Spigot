/*
 * This file is generated by jOOQ.
 */
package com.islandstudio.neon.stable.core.database.schema.neon_data.tables.records


import com.islandstudio.neon.stable.core.database.schema.neon_data.tables.DtRoleAccess
import com.islandstudio.neon.stable.core.database.schema.neon_data.tables.pojos.RoleAccess

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class DtRoleAccessRecord() : UpdatableRecordImpl<DtRoleAccessRecord>(DtRoleAccess.DT_ROLE_ACCESS) {

    open var roleAccessId: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var roleId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var permissionId: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var accessType: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised DtRoleAccessRecord
     */
    constructor(roleAccessId: Long? = null, roleId: Long? = null, permissionId: Long? = null, accessType: String? = null): this() {
        this.roleAccessId = roleAccessId
        this.roleId = roleId
        this.permissionId = permissionId
        this.accessType = accessType
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised DtRoleAccessRecord
     */
    constructor(value: RoleAccess?): this() {
        if (value != null) {
            this.roleAccessId = value.roleAccessId
            this.roleId = value.roleId
            this.permissionId = value.permissionId
            this.accessType = value.accessType
            resetChangedOnNotNull()
        }
    }
}
