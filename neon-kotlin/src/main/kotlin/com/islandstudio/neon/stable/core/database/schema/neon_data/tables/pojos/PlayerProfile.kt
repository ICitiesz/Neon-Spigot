/*
 * This file is generated by jOOQ.
 */
package com.islandstudio.neon.stable.core.database.schema.neon_data.tables.pojos


import java.io.Serializable
import java.time.LocalDateTime
import java.util.*


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class PlayerProfile(
    var playerUuid: UUID? = null,
    var playerName: String? = null,
    var joinAt: LocalDateTime? = null,
    var roleId: Long? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: PlayerProfile = other as PlayerProfile
        if (this.playerUuid == null) {
            if (o.playerUuid != null)
                return false
        }
        else if (this.playerUuid != o.playerUuid)
            return false
        if (this.playerName == null) {
            if (o.playerName != null)
                return false
        }
        else if (this.playerName != o.playerName)
            return false
        if (this.joinAt == null) {
            if (o.joinAt != null)
                return false
        }
        else if (this.joinAt != o.joinAt)
            return false
        if (this.roleId == null) {
            if (o.roleId != null)
                return false
        }
        else if (this.roleId != o.roleId)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.playerUuid == null) 0 else this.playerUuid.hashCode())
        result = prime * result + (if (this.playerName == null) 0 else this.playerName.hashCode())
        result = prime * result + (if (this.joinAt == null) 0 else this.joinAt.hashCode())
        result = prime * result + (if (this.roleId == null) 0 else this.roleId.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("PlayerProfile (")

        sb.append(playerUuid)
        sb.append(", ").append(playerName)
        sb.append(", ").append(joinAt)
        sb.append(", ").append(roleId)

        sb.append(")")
        return sb.toString()
    }
}
